searchState.loadedDescShard("permissioned_builder", 0, "Port to run the builder server on.\nThe number of views to buffer before a builder garbage …\nThe socket address of the HotShot CDN’s main entry point …\nIndex of a funded account derived from eth-mnemonic.\nMnemonic phrase for builder account.\nBUILDER HS EVENTS CHANNEL CAPACITY\nReturns the argument unchanged.\nPath to TOML file containing genesis state.\nUrl a sequencer can use to stream hotshot events\nCalls <code>U::from(self)</code>.\nWhether or not we are a DA node.\nPath to file containing private keys.\nUrl we will use for RPC communication with L1.\nThe address we advertise to other nodes as being a Libp2p …\nThe address to bind to for Libp2p (in <code>host:port</code> form)\nA comma-separated list of Libp2p multiaddresses to use as …\nThe amount of time a builder can wait before timing out a …\nURL of the HotShot orchestrator.\nPort to run the builder server on.\nPrivate staking key.\nPrivate state signing key.\nPeer nodes use to fetch missing state\nURL of the Light Client State Relay Server\nBUILDER TRANSACTIONS CHANNEL CAPACITY\nBootstrapping View number\nThe amount of time to wait between each request to the …")